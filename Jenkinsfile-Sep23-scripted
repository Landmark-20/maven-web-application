node {
    def mavenHome = tool name: 'maven3.9.4'

    stage('1.CloneCode') {
        // Jenkins running on a Linux system
        // sh "git clone https://github.com/Landmark-20/maven-web-application"
        git "https://github.com/LandmakTechnology/maven-web-application"
        // Jenkins running on a windows system
        // bat "git clone https://github.com/Landmark-20/maven-web-application"
    }

    stage('2.mvnBuild') {
        sh "${mavenHome}/bin/mvn clean package"
    }

    /*
    stage('3.CodeQuality') {
        // Uncomment and add code quality analysis steps here
        // sh "${mavenHome}/bin/mvn sonar:sonar"
        // Edit pom.xml propertiesTAG with SonarQube server details
    }

    stage('4.UploadArtifacts') {
        // Uncomment and add artifact upload steps here
        // sh "${mavenHome}/bin/mvn deploy"
        // Edit pom.xml distributionManagement TAG with repository details
        // Edit setting.xml with nexus-user login credentials
    }

    stage('5.Deploy2UAT') {
        // Uncomment and add deployment to UAT steps here
        // Use deploy-to-container plugin via pipeline syntax
        // deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://172.31.3.54:8177/')], contextPath: null, war: 'target/*war'
        // Deploying [/var/lib/jenkins/workspace/tesla-app-pipeline/target/tesla.war]
    }

    stage('6.6ManualApproval') {
        // Uncomment and add manual approval steps here
        sh "echo 'Please review the application performance'"
        // timeout(time:600, unit:'MINUTES') {
        // input message: 'Application ready for deployment, Please review and approve'
    }

    stage('7.Deploy2Prod') {
        // Uncomment and add deployment to production steps here
        sh "echo 'Deploy application to the customers/production'"
        // deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://172.31.3.54:8177/')], contextPath: null, war: 'target/*war'
    }

    stage('8.APM') {
        sh "echo 'monitoring and observation and alerting'"
        sh "echo 'application performance Monitoring in progress'"
    }

    stage('9.emailNotification') {
        sh "echo 'notify the team for unusual accurances'"
        sh "echo 'notify the team if the applications are down'"
        sh "echo 'notify the team if the latency is higher that expected'"
        emailext body: '''Hi Team,

The build and Deployment status for tesla-app follows.

regards,
Landmark Technologies''', recipientProviders: [buildUser(), contributor(), developers(), requestor()], subject: 'build and deployment status', to: 'pklayha@gmail.com'
    }
    */
}
